{"version":3,"file":"static/js/124.19ae1976.chunk.js","mappings":"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","sources":["components/DailyNormaModal/DailyNormaModal.styled.js","schemas/DailyNormaModalSchema.jsx","components/DailyNormaModal/DailyNormaModal.jsx","components/Homepage/DailyNorma.styled.js","components/Homepage/DailyNorma.jsx","pages/HomePage/HomePage.styled.js","components/Homepage/ImageOfBottle/ImageOfBottle.jsx","components/TodayAndMonthLayout/TodayAndMonthLayout.styled.js","components/TodayList/TodayList.styled.js","components/TodayItem/TodayItem.styled.js","components/TodayListModal/TodayListModal.styled.js","components/EditModal/EditModal.styled.js","helpers/disabledTime.js","components/EditModal/EditModal.jsx","components/TodayItem/TodayItem.jsx","components/TodayList/TodayList.jsx","components/MonthList/MonthList.styled.js","components/MonthItem/MonthItem.styled.js","components/DayDetails/DayDetails.styled..js","components/DayDetails/DayDetails.jsx","components/MonthItem/MonthItem.jsx","components/MonthList/MonthList.jsx","components/TodayAndMonthLayout/TodayAndMonthLayout.jsx","components/TodayListModal/TodayListModal.jsx","components/Homepage/WaterRatioPanel/WaterRatioPanel.jsx","pages/HomePage/HomePage.jsx"],"sourcesContent":["import ReactModal from 'react-modal';\nimport styled from 'styled-components';\n\nexport const StyledReactModal = styled(ReactModal)`\nposition: absolute;\ntop: 50%;\nleft: 50%;\ntransform: translate(-50%, -50%);\nheight: auto;\nmax-height: 90vh;\noverflow-y: auto;\nbackground-color: var(--primaryWhite);\nfont-family: 'Roboto-regular';\ncolor: var(--primaryBlack);\npadding: 24px 12px;\nborder-radius: 10px;\nfont-size: 16px;\nline-height: 1.2;\nbox-sizing: border-box;\n\n@media (min-width: 1440px) {\n    width: 592px;\n    padding: 32px 24px;\n  }\n\n@media (min-width: 768px) and (max-width: 1439px){\n    width: 704px;\n    padding: 32px 24px;\n  }\n@media (min-width: 320px) and (max-width: 767px){\n    width: 280px;\n  }\n`;\n\nexport const WrapHeader = styled.div`\ndisplay: flex;\njustify-content: space-between;\n`;\n\nexport const StyledRadioGroup = styled.div`\n  display: flex;\n  flex-direction: row;\n`;\n\nexport const StyledRadioLabel = styled.label`\n  position: relative;\n  cursor: pointer;\n  margin-right: 24px;\n`;\n\nexport const StyledRadioInput = styled.input`\n  position: absolute;\n  opacity: 0;\n  cursor: pointer;\n`;\n\nexport const StyledRadioCircle = styled.span`\n  position: absolute;\n  top: 10px;\n  left: 10px;\n  transform: translate(-50%, -50%);\n  width: 14px;\n  height: 14px;\n  border-radius: 50%;\n  border: 1px solid #007BFF;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n`;\n\nexport const CircleColor = styled.div`\n  background-color: ${(props) => (props.checked ? '#007BFF' : '#fff')};\n  width: 6px;\n  height: 6px;\n  border-radius: 50%;\n`;\n\nexport const StyledRadioText = styled.span`\n  margin-left: 22px;\n`;\n\nexport const TitleText = styled.div`\nfont-size: 26px;\nfont-family: 'Roboto-Medium';\nline-height: 1.2;\nmargin-bottom: 24px;\n`;\n\nexport const WrapFormulaText = styled.div`\ndisplay: flex;\ngap: 16px;\nflex-direction: column;\nmargin-bottom: 12px;\n\n@media (min-width: 768px) {\n    flex-direction: row;\n    gap: 24px;\n  }\n`;\n\nexport const FormulaText = styled.span`\ncolor: var(--primaryBlue);\nfont-size: 18px;\nline-height: 1.2;\n`;\n\nexport const WrapFormula = styled.div`\n  width: 100%;\n  box-sizing: border-box;\n  border: 1px solid var(--secondaryDarkGrey);\n  border-radius: 8px;\n  padding: 10px;\n  margin-bottom: 24px;\n`;\n\nexport const AboutFormula = styled.p`\ncolor: #8F8F8F;\nfont-size: 12px;\nline-height: 1.35;\nfont-family: 'Roboto-regular';\nbox-sizing: border-box;\n`;\n\nexport const AboutFormulaColor = styled.span`\ncolor: var(--primaryBlue);\n`;\n\nexport const Text = styled.h2`\nfont-size: 18px;\nline-height: 1.1;\nmargin-bottom: 16px;\n`;\nexport const TextInfo = styled.p`\nmargin-bottom: 8px;\nmargin-top: 16px;\n`;\n\nexport const Input = styled.input`\n  width: 100%;\n  box-sizing: border-box;\n  border: 1px solid var(--secondaryDarkGrey);\n  border-radius: 8px;\n  padding: 10px;\n  outline: none;\n  color: #407BFF;\n  font-size: 16px;\n  &::placeholder {\n    color: var(--primaryBlue);\n    opacity: 1;\n  }\n  ${({ $hasError }) =>\n    $hasError &&\n    `\n      border-color: var(--secondaryRed) !important;\n      color: var(--secondaryRed);\n    `}\n`;\n\nexport const AmountText = styled.div`\ndisplay: flex;\nmargin-top: 16px;\nmargin-bottom: 24px;\nalign-items: center;\n`;\n\nexport const AmountTextInfo = styled.p`\nwidth: 190px;\n@media (min-width: 768px){\n  width: 328px;\n  }\n`;\n\nexport const AmountNumberInfo = styled.span`\nmargin-left: 6px;\ncolor: var(--primaryBlue);\nfont-size: 18px;\nfont-family: 'Roboto-Bold';\nline-height: 1.3;\n`;\n\nexport const Button = styled.button`\nmargin-top: 24px;\nbackground-color: var(--primaryBlue);\nborder: none;\nwidth: 100%;\nheight: 36px;\ncolor: var(--primaryWhite);\nfont-size: 16px;\nfont-family: 'Roboto-Medium';\nline-height: 1.3;\nborder-radius: 10px;\nbox-shadow: 0px 4px 8px 0px rgba(64, 123, 255, 0.34);\n\n&:hover {\n    box-shadow: 0px 4px 14px 0px rgba(64, 123, 255, 0.54)\n  }\n\n  &:focus {\n    box-shadow: none;\n    outline: none;\n  }\n\n@media (min-width: 768px) {\n    display: block;\n    width: 160px;\n    height: 44px;\n    margin-left: auto;\n    font-size: 18px;\n  }\n`;\n\nexport const MessageError = styled.div`\n  color: var(--secondaryRed);\n  font-family: 'Roboto-regular';\n  margin-top: 4px;\n  font-size: 14px;\n`;","import * as Yup from 'yup';\n\nexport const DailyNormaModalSchema = Yup.object().shape({\n    gender: Yup.string().required('Gender is required'),\n    weight: Yup.number('Must be number').positive('Number must be positive').min(1)\n        .required('Weight is required'),\n    time: Yup.number().typeError('Must be a number').max(24, 'Time must not be greater than 24')\n        .min(0).nullable(),\n    dailyNorma: Yup.number().typeError('Must be a number'),\n})","import sprite from '../../images/SVG/symbol-defs.svg';\nimport {\n  StyledRadioGroup,\n  StyledRadioInput,\n  StyledRadioLabel,\n  StyledRadioText,\n  StyledRadioCircle,\n  TitleText,\n  Text,\n  FormulaText,\n  WrapFormula,\n  AboutFormula,\n  AboutFormulaColor,\n  WrapFormulaText,\n  CircleColor,\n  TextInfo,\n  Input,\n  AmountText,\n  AmountTextInfo,\n  AmountNumberInfo,\n  Button,\n  StyledReactModal,\n  WrapHeader,\n  MessageError,\n} from './DailyNormaModal.styled.js';\nimport { useEffect, useState } from 'react';\nimport { useFormik } from 'formik';\nimport { DailyNormaModalSchema } from 'schemas/DailyNormaModalSchema';\nimport { toast } from 'react-toastify';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { updateWaterThunk } from '../../redux/users/usersOperations';\nimport { selectIsLoading } from '../../redux/selectors';\n\nexport const DailyNormaModal = ({ modalIsOpen, closeModal }) => {\n  const isLoading = useSelector(selectIsLoading);\n  const [formula, setFormula] = useState('');\n  const [amount, setAmount] = useState(0);\n  const dispatch = useDispatch();\n  const token = useSelector(state => state.auth.token);\n\n  const formik = useFormik({\n    initialValues: {\n      gender: '',\n      weight: '',\n      time: '',\n      dailyNorma: '',\n    },\n    validationSchema: DailyNormaModalSchema,\n    onSubmit: async values => {\n      console.log(values.dailyNorma);\n      let waterNorma = amount * 1000;\n      if (values.dailyNorma > 0) {\n        waterNorma = values.dailyNorma * 1000;\n      }\n\n      if (waterNorma < 1000) {\n        return toast.error('Too little, even the cat drinks more (min 1 L)');\n      }\n\n      if (waterNorma > 15000 && waterNorma <= 25000) {\n        return toast.error(\n          'This is amount of water that horse usually drinks. Please pick another amount (max rate 15 L)'\n        );\n      }\n\n      if (waterNorma > 25000) {\n        return toast.error(\n          'This is amount of water that elephant usually drinks. Please pick another amount (max rate 15 L)'\n        );\n      }\n\n      const dailyNorma = {\n        dailyNorma: waterNorma,\n      };\n\n      try {\n        await dispatch(updateWaterThunk({ dailyNorma, token }));\n        handleCloseModal();\n      } catch {\n        return;\n      }\n    },\n  });\n\n  useEffect(() => {\n    const weightNumber = Math.floor(formik.values.weight);\n    let timeNumber = Math.floor(formik.values.time);\n\n    if (\n      formik.values.gender === '' ||\n      isNaN(weightNumber) ||\n      weightNumber < 0 ||\n      timeNumber < 0\n    ) {\n      return;\n    }\n    if (isNaN(timeNumber)) {\n      timeNumber = 0;\n    }\n\n    let result;\n    switch (formik.values.gender) {\n      case 'girl':\n        result = (weightNumber * 0.03 + timeNumber * 0.4).toFixed(1);\n        break;\n      case 'man':\n        result = (weightNumber * 0.04 + timeNumber * 0.6).toFixed(1);\n        break;\n      default:\n        return;\n    }\n\n    setAmount(result);\n  }, [formik.values.gender, formik.values.time, formik.values.weight]);\n\n  const manFromula = 'V=(M*0,04) + (T*0,6)';\n  const girlFormula = 'V=(M*0,03) + (T*0,4)';\n\n  const handleCloseModal = () => {\n    closeModal();\n    formik.resetForm();\n    setAmount(0);\n  };\n\n  const handleGenderChange = evt => {\n    formik.setFieldValue('gender', evt.target.value);\n    if (evt.target.value === 'girl') {\n      setFormula('V=(M*0,03) + (T*0,4)');\n    } else {\n      setFormula('V=(M*0,04) + (T*0,6)');\n    }\n  };\n\n  const handleInputChange = evt => {\n    formik.handleChange(evt);\n  };\n\n  return (\n    <StyledReactModal\n      contentLabel=\"Modal\"\n      isOpen={modalIsOpen}\n      onRequestClose={handleCloseModal}\n      style={{\n        overlay: {\n          backgroundColor: 'rgba(0, 0, 0, 0.8)',\n        },\n      }}\n    >\n      <WrapHeader>\n        <TitleText>My daily norma</TitleText>\n        <button className=\"cross-btn\" type=\"button\" onClick={handleCloseModal}>\n          <svg className=\"cross-svg\">\n            <use xlinkHref={`${sprite}#icon-plus-small`} />\n          </svg>\n        </button>\n      </WrapHeader>\n      <form onSubmit={formik.handleSubmit}>\n        <WrapFormulaText>\n          <p>\n            For girl: <FormulaText>{girlFormula}</FormulaText>\n          </p>\n          <p>\n            For man: <FormulaText>{manFromula}</FormulaText>\n          </p>\n        </WrapFormulaText>\n        <WrapFormula>\n          <FormulaText>\n            {formik.values.gender !== '' ? (\n              formula\n            ) : (\n              <AboutFormula>\n                <AboutFormulaColor>* </AboutFormulaColor>V is the volume of the\n                water norm in liters per day, M is your body weight, T is the\n                time of active sports, or another type of activity commensurate\n                in terms of loads (in the absence of these, you must set 0)\n              </AboutFormula>\n            )}\n          </FormulaText>\n        </WrapFormula>\n        <Text>Calculate your rate:</Text>\n        <StyledRadioGroup role=\"group\" aria-labelledby=\"my-radio-group\">\n          <StyledRadioLabel>\n            <StyledRadioInput\n              type=\"radio\"\n              name=\"gender\"\n              value=\"girl\"\n              onChange={handleGenderChange}\n              $hasError={formik.touched.name && formik.errors.name}\n            />\n            <StyledRadioCircle>\n              <CircleColor\n                checked={formik.values.gender === 'girl'}\n              ></CircleColor>\n            </StyledRadioCircle>\n            <StyledRadioText>For girl</StyledRadioText>\n          </StyledRadioLabel>\n          <StyledRadioLabel>\n            <StyledRadioInput\n              type=\"radio\"\n              name=\"gender\"\n              value=\"man\"\n              onChange={handleGenderChange}\n              $hasError={formik.touched.name && formik.errors.name}\n            />\n            <StyledRadioCircle>\n              <CircleColor\n                checked={formik.values.gender === 'man'}\n              ></CircleColor>\n            </StyledRadioCircle>\n            <StyledRadioText>For man</StyledRadioText>\n          </StyledRadioLabel>\n        </StyledRadioGroup>\n        {formik.touched.gender && formik.errors.gender ? (\n          <MessageError>{formik.errors.gender}</MessageError>\n        ) : null}\n        <label>\n          <TextInfo>Your weight in kilograms:</TextInfo>\n          <Input\n            name=\"weight\"\n            type=\"text\"\n            value={formik.values.weight}\n            onChange={handleInputChange}\n            $hasError={formik.touched.weight && formik.errors.weight}\n            placeholder=\"0\"\n          />\n          {formik.touched.weight && formik.errors.weight ? (\n            <MessageError>{formik.errors.weight}</MessageError>\n          ) : null}\n        </label>\n        <label>\n          <TextInfo>\n            The time of active participation in sports or other activities with\n            a high physical. load in hours:\n          </TextInfo>\n          <Input\n            name=\"time\"\n            type=\"text\"\n            value={formik.values.time}\n            onChange={handleInputChange}\n            $hasError={formik.touched.time && formik.errors.time}\n            placeholder=\"0\"\n          />\n          {formik.touched.time && formik.errors.time ? (\n            <MessageError>{formik.errors.time}</MessageError>\n          ) : null}\n        </label>\n        <AmountText>\n          <AmountTextInfo>\n            The required amount of water in liters per day:\n          </AmountTextInfo>\n          <AmountNumberInfo>{amount} L</AmountNumberInfo>\n        </AmountText>\n        <Text>Write down how much water you will drink:</Text>\n        <Input\n          name=\"dailyNorma\"\n          type=\"text\"\n          value={formik.values.dailyNorma}\n          onChange={handleInputChange}\n          $hasError={formik.touched.dailyNorma && formik.errors.dailyNorma}\n          placeholder={amount}\n        />\n        {formik.touched.dailyNorma && formik.errors.dailyNorma ? (\n          <MessageError>{formik.errors.dailyNorma}</MessageError>\n        ) : null}\n        <Button type=\"submit\" disabled={isLoading}>\n          Save\n        </Button>\n      </form>\n    </StyledReactModal>\n  );\n};\n","import styled from \"styled-components\";\n\nexport const Wrap = styled.div` \n  display: inline-block;\n  border-radius: 10px;\n  border: 1px solid var(--secondaryGrey);\n  background: rgb(255, 255, 255);\n  box-shadow: 0 4px 8px 0 rgba(158, 187, 255, 0.12);\n  padding: 8px 20px;\n  margin-bottom: 8px;\n  position:static;\n\n@media (min-width: 768px){\nposition:absolute;    \nheight: 76px;\n  }\n`;\n\nexport const Text = styled.p`\nmargin-bottom: 12px;\nfont-size: 18px;\nfont-family: 'Roboto-Medium';\nline-height: 1.3;\ncolor: var(--primaryBlack);\n`;\n\nexport const TextWater = styled.p`\nfont-size: 24px;\nfont-family: 'Roboto-Bold';\nline-height: 1;\ncolor: var(--primaryBlue);\n`;\n\nexport const Button = styled.button`\npadding: 0;\nfont-size: 16px;\nfont-family: 'Roboto-regular';\nline-height: 1.3;\ncolor: #8BAEFF;\nborder: none;\nbackground-color:var(--primaryWhite);\noutline: none;\nspan {\n    color: transparent;\n    overflow: hidden;\n\n    background: linear-gradient(\n      90deg,\n      var(--secondaryOrange) 0%,\n      var(--secondaryOrange) 50%,\n      var(--primaryBlue) 50%,\n      var(--primaryBlue) 100%\n    );\n\n    background-size: 200% 100%;\n    background-position: 100%;\n\n    -webkit-background-clip: text;\n    background-clip: text;\n\n    transition: background-position var(--animationCubicBezier);\n  }\n\n  &:hover {\n    & span {\n      background-position: 0 100%;\n    }\n  }\n`;\n\nexport const BtnWrap = styled.div`\ndisplay: flex;\ngap: 12px;\nalign-items: baseline;\n`","import { useEffect, useState } from 'react';\nimport { useSelector } from \"react-redux\";\n\nimport { DailyNormaModal } from \"components/DailyNormaModal/DailyNormaModal\";\nimport { Button, Text, TextWater, Wrap, BtnWrap } from \"./DailyNorma.styled.js\";\n\nexport const DailyNorma = () => {\n    const dailyNorma = useSelector(state => state.auth.user.dailyNorma);\n\n    const [modalIsOpen, setIsOpen] = useState(false);\n\n    useEffect(() => {\n        const body = document.body;\n        if (modalIsOpen) {\n            body.style.overflow = 'hidden';\n        } else {\n            body.style.overflow = 'auto';\n        }\n        return () => {\n            body.style.overflow = 'auto';\n        };\n    }, [modalIsOpen]);\n    \n    const water = (dailyNorma / 1000).toFixed(1)\n    const openModal = () => {\n        setIsOpen(true);\n    }\n\n    const closeModal = () => {\n        setIsOpen(false);\n    }\n    \n    return (\n        <Wrap>\n            <Text>My daily norma</Text>\n            <BtnWrap>\n                <TextWater>{water} L</TextWater>\n                <Button type=\"button\" onClick={openModal}><span>Edit</span></Button>\n                <DailyNormaModal modalIsOpen={modalIsOpen} closeModal={closeModal} />\n            </BtnWrap>\n        </Wrap>\n    )\n}","import styled from 'styled-components';\nimport backgroundImgMob from '../../images/PNG/images-mobile/bg_el_home_screen.png';\nimport backgroundImgTab from '../../images/PNG/images-tablet/bg_el_home_screen.png';\nimport backgroundImgDesc from '../../images/PNG/images-desktop/bg_el_main_page.png';\n\nexport const StyledBackground = styled.div`\n  background-image: url(${backgroundImgMob});\n  background-size: cover;\n  position: relative;\n  background-position: 0% -5%;\n  background-repeat: no-repeat;\n  height: 100%;\n  z-index: 0;\n\n  @media screen and (min-width: 768px) {\n    background-image: url(${backgroundImgTab});\n    background-size: cover;\n    background-position: 0% 0%;\n    background-repeat: no-repeat;\n  }\n  @media screen and (min-width: 1440px) {\n    background-image: url(${backgroundImgDesc});\n    background-size: contain;\n    background-position: top center;\n    background-repeat: no-repeat;\n  }\n`;\nexport const ImgTumb = styled.div`\n  margin-bottom: 16px;\n  width: 100%;\n\n  margin-left: auto;\n  margin-right: auto;\n  z-index: -1;\n  position: relative;\n\n  img {\n    width: 100%;\n    height: auto;\n  }\n\n  @media (min-width: 320px) {\n    width: 280px;\n    height: 208px;\n\n    // position: relative;\n  }\n  @media (min-width: 768px) {\n    width: 518px;\n    height: 386px;\n    // position: relative;\n  }\n\n  @media (min-width: 1440px) {\n    width: 738px;\n    height: 548px;\n    margin-bottom: 24px;\n    img {\n      position: relative;\n      left: -50px;\n    }\n  }\n`;\nexport const StyledRangeInput = styled.input`\n  -webkit-appearance: none;\n  appearance: none;\n  /* width: 258px; */\n  width: 100%;\n  cursor: default;\n  outline: none;\n  border-radius: 15px;\n  margin-bottom: 16px;\n  margin-left: 9px;\n  margin-right: 13px;\n  display: block;\n  height: 8px;\n  background: var(--secondaryDarkGrey);\n  @media (min-width: 320px) {\n    width: 258px;\n  }\n  @media (min-width: 768px) {\n    width: 334px;\n    // margin-left:1px;\n    // margin-right:17px;\n  }\n  @media (min-width: 1440px) {\n    width: 360px;\n  }\n\n  /* Thumb: webkit */\n  &::-webkit-slider-thumb {\n    -webkit-appearance: none;\n    appearance: none;\n    height: 14px;\n    width: 14px;\n    background-color: var(--primaryWhite);\n    border-radius: 50%;\n    border: 1px solid var(--primaryBlue);\n  }\n\n  /* Thumb: Firefox */\n  &::-moz-range-thumb {\n    height: 14px;\n    width: 14px;\n    background-color: var(--primaryWhite);\n    border-radius: 50%;\n    border: 1px solid var(--primaryBlue);\n  }\n`;\n\nexport const RangeAndAddWater = styled.div`\n  display: flex;\n  flex-wrap: wrap;\n  gap: 16px;\n  justify-content: space-between;\n  margin-bottom: 40px;\n  @media (min-width: 768px) {\n    flex-wrap: nowrap;\n    gap: 24px;\n    align-items: center;\n  }\n  @media (min-width: 1440px) {\n    gap: 28px;\n    margin-bottom: 0px;\n  }\n`;\n\nexport const RangeDiv = styled.div`\n  width: 280px;\n  @media (min-width: 768px) {\n    width: 356px;\n  }\n  @media (min-width: 768px) {\n    width: 391px;\n  }\n`;\n\nexport const RangeTitle = styled.p`\n  font-size: 18px;\n  font-weight: 400;\n  line-height: 24px;\n  letter-spacing: 0em;\n  text-align: left;\n  margin-bottom: 8px;\n  color: var(--primaryBlue);\n  @media (min-width: 768px) {\n    margin-bottom: 8px;\n  }\n`;\nexport const PercentageOfRange = styled.div`\n  position: relative;\n  font-size: 12px;\n  font-weight: 400;\n  line-height: 16px;\n  letter-spacing: 0em;\n  text-align: center;\n  color: var(--primaryBlue);\n  left: 4px;\n  &::before {\n    content: '';\n    position: absolute;\n    top: -8px;\n    left: 50%;\n    width: 1px;\n    height: 8px;\n    background-color: var(--secondaryDarkGrey);\n  }\n`;\nexport const BoldPercentageOfRange = styled.p`\n  font-weight: 500;\n  font-size: 16px;\n  line-height: 20px;\n  letter-spacing: 0em;\n`;\nexport const PercentageDiv = styled.div`\n  display: flex;\n  justify-content: space-between;\n  flex-basis: auto;\n`;\nexport const ButtonAddWater = styled.button`\n  width: 100%;\n  height: 36px;\n  border-radius: 10px;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  font-size: 16px;\n  font-weight: 500;\n  line-height: 20px;\n  letter-spacing: 0em;\n  text-align: center;\n  cursor: pointer;\n  border: none;\n  background-color: var(--primaryBlue);\n  color: var(--primaryWhite);\n  box-shadow: 0px 4px 8px 0px #407bff57;\n  &:hover,\n  &:focus {\n    box-shadow: 0px 4px 14px 0px #407bff;\n  }\n  transition: all 0.25s cubic-bezier(0.7, 0.98, 0.86, 0.98) 0s;\n  @media (min-width: 320px) {\n    width: 280px;\n  }\n\n  @media (min-width: 768px) {\n    font-size: 18px;\n    font-weight: 500;\n    line-height: 24px;\n    padding: 8px 90px 8px 90px;\n    width: 336px;\n    height: 44px;\n  }\n\n  @media (min-width: 1440px) {\n    width: 182px;\n    padding: 10px 29px 10px 29px;\n  }\n`;\nexport const SvgButton = styled.svg`\n  width: 24px;\n  height: 24px;\n  margin-right: 10px;\n  stroke: var(--primaryWhite);\n  stroke-width: 2;\n`;\nexport const LeftSideDiv = styled.div`\n@media (min-width: 1440px){\n  padding-bottom: 76px;\n  width:592px;\n}\n`\nexport const AllSidesDiv = styled.div`\n  @media (min-width: 1440px) {\n    display: flex;\n    gap: 32px;\n  }\n\n  @media only screen and (max-width: 1439px) {\n    padding-bottom: 40px;\n  }\n`;\n","import { ImgTumb } from '../../../pages/HomePage/HomePage.styled';\nimport bottleMobile from '../../../images/PNG/images-mobile/btl_home_screen.png';\nimport bottleTablet from '../../../images/PNG/images-tablet/btl_home_screen.png';\nimport bottleDesktop from '../../../images/PNG/images-desktop/btl_home_screen.png';\n\nexport const ImageOfBottle = () => {\n  return (\n    <ImgTumb>\n      <img\n        src={bottleMobile}\n        srcSet={`\n          ${bottleMobile} 320w,\n          ${bottleTablet} 768w,\n          ${bottleDesktop} 1400w\n        `.trim()}\n        sizes=\"(min-width: 1441px) 1440px,\n              (min-width: 769px) 768px,\n              (max-width: 320px) 100vw\n\"\n        alt=\"bottle\"\n      />\n    </ImgTumb>\n  );\n};\n","import styled from \"styled-components\";\n\nexport const TaDLayout = styled.div`\n    background-color: var(--secondaryGrey);\n    padding: 24px 8px;\n    border-radius: 10px;\n    margin: 0 auto;\n    box-shadow: 0px 4px 14px rgb(64, 123, 255, 0.3);\n    width: 100%;\n\n    @media screen and (min-width: 320px) {\n        width: 280px;\n        }\n\n    @media screen and (min-width: 768px) {\n        width: 704px;\n        padding: 32px 24px;\n        }\n\n    @media screen and (min-width: 1440px) {\n        width: 592px;\n    }\n\n`","import styled from \"styled-components\";\n\nexport const TodayListContainer = styled.div`\nmargin-bottom: 24px;\n\n  @media screen and (min-width: 320px) {\n       width: 264px;\n        }\n\n        @media screen and (min-width: 768px) {\n        width: 656px;\n        }\n\n    @media screen and (min-width: 1440px) {\n        width: 544px;\n    }\n`\n\nexport const TodayTitle = styled.h3`\n  font-size: 24px;\n  font-weight: 500;\n  line-height: 1.25;\n  margin-bottom: 16px;\n\n  @media screen and (min-width: 768px) {\n        font-size: 26px\n        }\n\n    @media screen and (min-width: 1440px) {\n       \n    }\n`\n\nexport const AddLink = styled.button`\n  display: flex;\n  padding-top: 12px;\n  border: 0;\n  background-color: inherit;\n  font-size: 18px;\n  line-height: 1.25;\n  color: var(--primaryBlue);\n  font-weight: 500;\n  transition: color 0ms linear;\n  align-items: center;\n  &:hover {\n    color: var(--secondaryOrange);\n  }\n\n  & span {\n    color: transparent;\n    overflow: hidden;\n    background: linear-gradient(\n      90deg,\n      var(--secondaryOrange) 0%,\n      var(--secondaryOrange) 50%,\n      var(--primaryBlue) 50%,\n      var(--primaryBlue) 100%\n    );\n    background-size: 200% 100%;\n    background-position: 100%;\n    -webkit-background-clip: text;\n    background-clip: text;\n    transition: background-position var(--animationCubicBezier);\n  }\n\n  &:hover {\n    & span {\n      background-position: 0 100%;\n    }\n  }\n\n  @media screen and (min-width: 320px) {\n    width: 111px;\n    font-size: 16px;\n  }\n\n  @media screen and (min-width: 768px) {\n    width: 129px;\n    font-size: 18px;\n  }\n`;\n\nexport const SvgPlus = styled.svg`\nwidth: 16px;\nheight: 16px;\nmargin-right: 8px;\nstroke: currentColor;\nfill: currentColor;\n\n@media screen and (min-width: 768px) {\n       width: 24px;\nheight: 24px;\n        }\n\n    @media screen and (min-width: 1440px) {\n        width: 24px;\nheight: 24px;\n    }\n\n\n`\n\nexport const WaterList = styled.ul`\ndisplay: flex;\nflex-direction: column;\n   list-style: none;\n   margin: 0;\npadding: 0;\nheight: 212px;\noverflow-y: scroll;\noverflow-x: hidden;\n\n\n\n\n\n&::-webkit-scrollbar {\n  width: 4px; \n \n}\n\n&::-webkit-scrollbar-track {\n  background-color: var(--secondaryDarkGrey);\n border: 1px solid transparent;\n    background-clip: content-box;\n}\n\n&::-webkit-scrollbar-thumb {\n  height: 100px;\n  background-color: var(--secondaryBlue);\n  border-radius: 8px; \n}\n\n\n\n\n\n\n`\n","import styled from \"styled-components\";\n\nexport const WaterItem = styled.li`\n   display: flex;\n   height: 50px;\n   width: 100%;\n   padding: 12px 0;\n   align-items: center;\n   border-bottom: 1px solid var(--secondaryDarkGrey);\n \n \n\n   @media screen and (min-width: 320px) {\n       width: 254px;\n        }\n\n        @media screen and (min-width: 768px) {\n        width: 646px;\n        }\n\n    @media screen and (min-width: 1440px) {\n        width: 534px;\n    }\n\n`\n\nexport const CupIcon = styled.svg`\n   width: 26px;\n   height: 26px;\n   fill: var(--primaryBlue);\n\n  @media screen and (min-width: 768px) {\n       width: 36px;\n   height: 36px;\n        }\n\n\n\n`\n\nexport const WaterText = styled.p`\n  font-size: 18px;\n  line-height: 1.33;\n  font-weight: 400;\n  color: var(--primaryBlue);\n  margin-left: 12px;\n\n`\n\nexport const TimeText = styled.p`\nfont-size: 12px;\n  line-height: 2;\n  font-weight: 400;\n  color: var(--primaryBlack);\n  margin-left: 12px;\n\n   @media screen and (min-width: 768px) {\n       margin-left: 16px;\n        }\n\n`\n\nexport const SvgPen = styled.svg`\nwidth: 16px;\nheight: 16px;\nfill: currentColor;\n\n\n\n`\n\nexport const SvgTrash = styled.svg`\nwidth: 16px;\nheight: 16px;\nfill: currentColor;\n`\n\nexport const ConfigIcons = styled.div`\ndisplay: flex;\nwidth: 50px;\nmargin-left: auto;\ngap: 18px;\n`\n\nexport const ButtonPen = styled.button`\n   border: 0;\n   background-color: inherit;\n   margin: 0;\n   padding: 0;\n   position: relative;\n   color: var(--secondaryBlue);\n   width: 16px;\nheight: 16px;\n\n   &::before {\n  content: \"\";\n    position: absolute;\n  width: 16px;\n  height: 1px;\n  background-color: var(--secondaryBlue);\n  bottom: -3px;\n  opacity: 0;\n  transition: opacity 200ms ease-in;\n}\n\n&:hover {\n  &::before {\n    opacity: 1;\n  }\n}\n\n`\n\nexport const ButtonTrash = styled.button`\n   border: 0;\n   background-color: inherit;\n   margin: 0;\n   padding: 0;\n   position: relative;\n   color: var(--secondaryRed);\n   width: 16px;\nheight: 16px;\n\n\n   &::before {\n  content: \"\";\n    position: absolute;\n  width: 16px;\n  height: 1px;\n  background-color: var(--secondaryRed);\n  bottom: -3px;\n  opacity: 0;\n  transition: opacity 200ms ease-in;\n}\n\n&:hover {\n  &::before {\n    opacity: 1;\n  }\n}\n\n`","import ReactModal from 'react-modal';\nimport styled from 'styled-components';\nimport { TimePicker  } from 'antd';\n\nexport const StyledModal = styled(ReactModal)`\nposition: absolute;\ntop: 50%;\nleft: 50%;\ntransform: translate(-50%, -50%);\nbackground-color: var(--primaryWhite);\ncolor: var(--primaryBlack);\npadding: 24px 12px;\nborder-radius: 10px;\nfont-size: 18px;\nline-height: 1.1;\nfont-family: 'Roboto-regular';\nbox-sizing: border-box;\noverflow-y: auto;\nwidth: 280px;\n\n@media (min-width: 1440px) {\n    width: 592px;\n    padding: 32px 24px;\n  }\n\n@media (min-width: 768px) and (max-width: 1439px){\n    width: 704px;\n    padding: 32px 24px;\n  }\n@media (min-width: 320px) and (max-width: 767px){\n    width: 280px;\n  }\n  &.ReactModal__Overlay--after-open {\n    border: none;\n  }\n`;\n\nexport const Title = styled.h1`\nfont-size: 26px;\nline-height: 1.25;\nmargin-bottom: 24px;\n`;\n\nexport const BtnSvg = styled.button`\n@media (min-width: 768px) and (max-width: 1439px){\n    top: 36px; \n    right: 24px;\n  }\n`;\n\nexport const Svg = styled.svg`\nfill: var(--primaryBlue);\n`;\n\nexport const WrapSvg = styled.button`\nfont-family: 'Roboto-Bold';\nwidth: 92px;\ndisplay: flex;\nalign-items: center;\njustify-content: center;\nwidth: 44px;\nheight: 44px;\nbackground-color: var(--primaryWhite);\nborder-radius: 30px;\nborder: 1px solid var(--secondaryBlue);\nbox-shadow: 0px 2px 4px 0px rgba(64, 123, 255, 0.2);\n`;\n\nexport const WrapHeader = styled.div`\ndisplay: flex;\njustify-content: space-between;\n`;\n\nexport const CounterDiv = styled.div`\ndisplay: flex;\njustify-content: center;\nalign-items: center;\ncolor: var(--primaryBlue);\nfont-family: 'Roboto-Bold';\nwidth: 92px;\nheight: 36px;\nborder-radius: 40px;\nbackground-color: var(--secondaryDarkGrey);\n`;\n\nexport const CounterWrap = styled.div`\ndisplay: flex;\nmargin-top: 12px;\nmargin-bottom: 24px;\nalign-items: center;\ngap: 7px;\n`;\n\nexport const Button = styled.button`\nbackground-color: var(--primaryBlue);\nborder: none;\nwidth: 100%;\nheight: 36px;\ncolor: var(--primaryWhite);\nfont-size: 16px;\nline-height: 1.3;\nborder-radius: 10px;\nbox-shadow: 0px 4px 8px 0px rgba(64, 123, 255, 0.34);\n\n&:hover {\n    box-shadow: 0px 4px 14px 0px rgba(64, 123, 255, 0.54)\n  }\n\n  &:focus {\n    box-shadow: none;\n    outline: none;\n  }\n\n@media (min-width: 768px) {\n    width: 160px;\n    height: 44px;\n    font-size: 18px;\n  }\n`;\n\nexport const TitleInput = styled.p`\nmargin-bottom: 16px;\nfont-family: 'Roboto-Medium';\n`;\n\nexport const TextInput = styled.p`\nfont-size: 16px;\n`;\n\nexport const TextInputTime = styled.p`\nfont-size: 16px;\nmargin-bottom: 12px;\n`;\n\nexport const Input = styled.input`\n  width: 100%;\n  box-sizing: border-box;\n  margin-bottom: 24px;\n  border: 1px solid var(--secondaryDarkGrey);\n  border-radius: 8px;\n  padding: 10px;\n  outline: none;\n  color: #407BFF;\n  font-size: 16px;\n`;\n\nexport const AmountDiv = styled.div`\ncolor: var(--primaryBlue);\nfont-family: 'Roboto-Bold';\nborder-radius: 40px;\n`;\n\nexport const AmountWrap = styled.div`\ndisplay: flex;\ngap: 16px;\nflex-direction: column;\njustify-content: center;\nalign-items: center;\n@media (min-width: 768px){\n  gap: 24px;\n  flex-direction: row;\n  justify-content: end;\n  }\n`;\n\nexport const MessageError = styled.div`\n  color: var(--secondaryRed);\n  font-family: 'Roboto-regular';\n  margin-top: 4px;\n  font-size: 14px;\n`;\n\nexport const StyledDatePicker = styled(TimePicker)`\n  width: 100%;\n  margin-bottom: 24px;\n  border: 1px solid var(--secondaryDarkGrey);\n  border-radius: 8px;\n  padding: 10px;\n  outline: none;\n`;","import styled from 'styled-components';\n\nexport const CounterDiv = styled.div`\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  color: var(--primaryBlue);\n  font-family: 'Roboto-Bold';\n  width: 92px;\n  height: 36px;\n  border-radius: 40px;\n  background-color: var(--secondaryDarkGrey);\n`;\n\nexport const StyledContainer = styled.div`\n  display: flex;\n  padding: 8px 24px;\n  align-items: center;\n  gap: 12px;\n  width: 254px;\n  height: 52px;\n  border-radius: 10px;\nbackground: var(--Secondary-color-2, #ECF2FF);\n`;\n\nexport const StyledForm = styled.form`\n  padding-top: 24px;\n`;","export const disabledTime = (now) => {\n    const currentHour = now.hour();\n    const disabledHours = () => {\n        return Array.from({ length: 24 }, (_, index) => index > currentHour ? index : -1).filter(hour => hour !== -1);\n    };\n\n    const disabledMinutes = (selectedHour) => {\n        return selectedHour === currentHour ? Array.from({ length: 60 }, (_, index) => index > now.minute() ? index : -1).filter(minute => minute !== -1) : [];\n    };\n\n    return { disabledHours, disabledMinutes };\n};","import React, { useEffect, useState } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { toast } from 'react-toastify';\n\nimport { editWaterOperation } from '../../redux/water/waterOperations';\nimport sprite from '../../images/SVG/symbol-defs.svg';\nimport {\n  StyledModal,\n  WrapHeader,\n  Title,\n  BtnSvg,\n  CounterWrap,\n  Button,\n  TitleInput,\n  TextInput,\n  TextInputTime,\n  Input,\n  AmountWrap,\n  WrapSvg,\n  Svg,\n  StyledDatePicker,\n  AmountDiv,\n} from '../TodayListModal/TodayListModal.styled';\nimport { CounterDiv, StyledContainer, StyledForm } from './EditModal.styled';\nimport { CupIcon, WaterText, TimeText } from '../TodayItem/TodayItem.styled';\nimport { disabledTime } from 'helpers/disabledTime';\nimport { selectIsLoading } from '../../redux/selectors';\n\nconst glassIcon = `${sprite}#cup`;\n\nexport const EditModal = ({ modalIsOpen, closeModal, date, id, waterMl }) => {\n  const isLoading = useSelector(selectIsLoading);\n  const [waterVolume, setWaterVolume] = useState(waterMl);\n  const [startDate, setStartDate] = useState(new Date(date));\n  const dispatch = useDispatch();\n\n  const hours = startDate.getHours().toString().padStart(2, '0');\n  const minutes = startDate.getMinutes().toString().padStart(2, '0');\n\n  useEffect(() => {\n    const body = document.body;\n    if (modalIsOpen) {\n      body.style.overflow = 'hidden';\n    } else {\n      body.style.overflow = 'auto';\n    }\n    return () => {\n      body.style.overflow = 'auto';\n    };\n  }, [modalIsOpen]);\n\n  const increment = () => {\n    setWaterVolume(state => state + 50);\n  };\n\n  const decrement = () => {\n    setWaterVolume(state => state - 50);\n  };\n\n  const handleChange = async evt => {\n    if (evt.target.value.length > 4) {\n      return;\n    }\n    const result = Math.floor(evt.target.value);\n    if (result || result === 0) {\n      setWaterVolume(result);\n    }\n  };\n\n  const onChange = timeValue => {\n    setStartDate(timeValue.$d);\n  };\n\n  const handleCloseModal = () => {\n    closeModal();\n    setStartDate(new Date());\n  };\n\n  const handleSubmit = async evt => {\n    evt.preventDefault();\n    if (waterVolume < 0 || waterVolume > 1500) {\n      return toast.error('You can enter a value from 0 to 1500');\n    }\n    if (waterVolume > 0) {\n      dispatch(editWaterOperation({ id, waterVolume, date: startDate }));\n    }\n    handleCloseModal();\n  };\n\n  return (\n    <StyledModal\n      contentLabel=\"Edit Modal\"\n      isOpen={modalIsOpen}\n      onRequestClose={closeModal}\n      style={{\n        overlay: {\n          backgroundColor: 'rgba(0, 0, 0, 0.8)',\n        },\n      }}\n    >\n      <WrapHeader>\n        <Title>Edit the entered amount of water</Title>\n        <BtnSvg className=\"cross-btn\" type=\"button\" onClick={closeModal}>\n          <svg className=\"cross-svg\">\n            <use xlinkHref={`${sprite}#icon-plus-small`} />\n          </svg>\n        </BtnSvg>\n      </WrapHeader>\n      <StyledContainer>\n        <CupIcon>\n          <use href={glassIcon}></use>\n        </CupIcon>\n        <WaterText>{`${waterMl} ml`}</WaterText>\n        <TimeText>{`${hours}:${minutes}`}</TimeText>\n      </StyledContainer>\n      <StyledForm onSubmit={handleSubmit}>\n        <TitleInput>Correct entered data:</TitleInput>\n        <TextInput>Amount of water:</TextInput>\n        <CounterWrap>\n          <WrapSvg\n            type=\"button\"\n            onClick={decrement}\n            disabled={waterVolume <= 49 ? true : false}\n          >\n            <Svg width=\"24\" height=\"24\">\n              <use xlinkHref={`${sprite}#icon-minus-small`} />\n            </Svg>\n          </WrapSvg>\n          <CounterDiv>{waterVolume} ml</CounterDiv>\n          <WrapSvg\n            type=\"button\"\n            onClick={increment}\n            disabled={waterVolume >= 1500 ? true : false}\n          >\n            <Svg width=\"24\" height=\"24\">\n              <use xlinkHref={`${sprite}#icon-plus-small`} />\n            </Svg>\n          </WrapSvg>\n        </CounterWrap>\n\n        <label>\n          <TextInputTime>Recording time:</TextInputTime>\n          <StyledDatePicker\n            selected={startDate}\n            placeholder={`${hours}:${minutes}`}\n            format=\"HH:mm\"\n            onChange={onChange}\n            disabledTime={disabledTime}\n          />\n        </label>\n        <label>\n          <TitleInput>Enter the value of the water used:</TitleInput>\n          <Input\n            name=\"amount\"\n            type=\"text\"\n            value={waterVolume}\n            onChange={handleChange}\n          />\n        </label>\n        <AmountWrap>\n          <AmountDiv>{waterVolume} ml</AmountDiv>\n          <Button type=\"submit\" disabled={isLoading}>\n            Save\n          </Button>\n        </AmountWrap>\n      </StyledForm>\n    </StyledModal>\n  );\n};\n","import React from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\n\nimport {\n  WaterItem,\n  WaterText,\n  TimeText,\n  ConfigIcons,\n  ButtonPen,\n  ButtonTrash,\n  SvgPen,\n  SvgTrash,\n  CupIcon,\n} from './TodayItem.styled';\nimport { EditModal } from '../EditModal/EditModal.jsx';\nimport { DeleteModal } from 'components/Modal/DeleteModal';\nimport sprite from '../../images/SVG/symbol-defs.svg';\nimport { deleteWaterOperation } from '../../redux/water/waterOperations';\nimport {\n  ButtonCancel,\n  ButtonRed,\n  ButtonsWrapper,\n  SecondTitleModal,\n} from '../Modal/DeleteModal.styled';\nimport { selectModalDelete, selectModalEdit } from '../../redux/selectors';\nimport {\n  closeModalDelete,\n  closeModalEdit,\n  openModalDelete,\n  openModalEdit,\n} from '../../redux/modal/modalSlice';\n\nconst editIcon = `${sprite}#icon-pencil`;\nconst delIcon = `${sprite}#icon-trash`;\nconst glassIcon = `${sprite}#cup`;\n\nexport const TodayItem = ({ id, water, date }) => {\n  const dispatch = useDispatch();\n  const time = `${date.getHours()}:${date\n    .getMinutes()\n    .toString()\n    .padStart(2, '0')}`;\n\n  const isEditModalOpen = useSelector(selectModalEdit) === id;\n  const isDeleteModalOpen = useSelector(selectModalDelete) === id;\n\n  const openModal = modalType => () => {\n    switch (modalType) {\n      case 'edit':\n        dispatch(openModalEdit(id));\n        break;\n      case 'delete':\n        dispatch(openModalDelete(id));\n        break;\n      default:\n        break;\n    }\n  };\n\n  const closeModal = modalType => () => {\n    switch (modalType) {\n      case 'edit':\n        dispatch(closeModalEdit());\n        break;\n      case 'delete':\n        dispatch(closeModalDelete());\n        break;\n      default:\n        break;\n    }\n  };\n\n  const handleDelete = async () => {\n    dispatch(deleteWaterOperation(id));\n    dispatch(closeModalDelete());\n  };\n\n  return (\n    <WaterItem>\n      <CupIcon>\n        <use href={glassIcon}></use>\n      </CupIcon>\n      <WaterText>{`${water} ml`}</WaterText>\n      <TimeText>{time}</TimeText>\n\n      <ConfigIcons>\n        <ButtonPen onClick={openModal('edit')}>\n          <SvgPen>\n            <use href={editIcon}></use>\n          </SvgPen>\n        </ButtonPen>\n        <ButtonTrash onClick={openModal('delete')}>\n          <SvgTrash>\n            <use href={delIcon}></use>\n          </SvgTrash>\n        </ButtonTrash>\n      </ConfigIcons>\n\n      <EditModal\n        modalIsOpen={isEditModalOpen}\n        closeModal={closeModal('edit')}\n        id={id}\n        date={date}\n        waterMl={water}\n      />\n\n      <DeleteModal\n        isOpen={isDeleteModalOpen}\n        onRequestClose={closeModal('delete')}\n        titleText=\"Delete entry\"\n      >\n        <SecondTitleModal>\n          Are you sure you want to delete the entry?\n        </SecondTitleModal>\n        <ButtonsWrapper>\n          <ButtonCancel onClick={closeModal('delete')}>Cancel</ButtonCancel>\n          <ButtonRed onClick={handleDelete}>Delete</ButtonRed>\n        </ButtonsWrapper>\n      </DeleteModal>\n    </WaterItem>\n  );\n};\n","import React, { useEffect } from 'react';\n\nimport {\n  TodayTitle,\n  AddLink,\n  SvgPlus,\n  WaterList,\n  TodayListContainer,\n} from './TodayList.styled';\nimport { TodayItem } from 'components/TodayItem/TodayItem';\nimport sprite from '../../images/SVG/symbol-defs.svg';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { getWaterOperation } from '../../redux/water/waterOperations';\nimport { selectTodayList } from '../../redux/selectors';\nimport { openModalAdd } from '../../redux/modal/modalSlice';\n\nconst plusIcon = `${sprite}#icon-plus-small`;\n\nexport const TodayList = () => {\n  const dispatch = useDispatch();\n\n  useEffect(() => {\n    dispatch(getWaterOperation(new Date()));\n  }, [dispatch]);\n\n  const todayList = useSelector(selectTodayList);\n\n  return (\n    <TodayListContainer>\n      <TodayTitle>Today</TodayTitle>\n      <WaterList>\n        {todayList.map(item => (\n          <TodayItem\n            key={item._id}\n            water={item.waterVolume}\n            date={new Date(item.date)}\n            id={item._id}\n          />\n        ))}\n        \n      </WaterList>\n      <AddLink onClick={() => dispatch(openModalAdd())}>\n          <SvgPlus>\n            <use xlinkHref={plusIcon}></use>\n          </SvgPlus>\n          <span>Add water</span>\n        </AddLink>\n    </TodayListContainer>\n  );\n};\n","import styled from \"styled-components\";\n\n\nexport const MonthTitle = styled.h3`\n  font-size: 24px;\n  font-weight: 500;\n  line-height: 1.25;\n`\n\nexport const DatePicker = styled.div`\n  display: flex;\n  color: #407BFF;\n  align-items: center;\n  margin-left: auto;\n`\n\nexport const SvgLeft = styled.svg`\nwidth: 14px;\nheight: 14px;\ntransform: rotate(90deg);\n`\n\nexport const SvgRight = styled.svg`\nwidth: 14px;\nheight: 14px;\ntransform: rotate(-90deg);\n`\n\nexport const LeftArrowButton = styled.button`\nborder: 0;\nbackground-color: inherit;\npadding: 1px;\npadding-right: 12px;\ncolor: inherit;\nfill: currentColor;\n\n`\n\nexport const RigthArrowButton = styled.button`\nborder: 0;\nbackground-color: inherit;\npadding: 1px;\npadding-left: 12px;\ncolor: inherit;\nfill: currentColor;\n\n\n&:disabled {\n  color: #ECF2FF;\n}\n`\n\nexport const MonthHeader = styled.div`\ndisplay: flex;\nmargin-bottom: 16px;\n`\n\nexport const MonthListStyled = styled.ul`\nmargin-left: auto;\nmargin-right: auto;\nmargin: 0;\ndisplay: flex;\n   flex-direction: row;\n   flex-wrap: wrap;\n    row-gap: 16px;\n    column-gap: 26px;\nposition: relative;\n  \n   @media screen and (min-width: 768px) {\n     row-gap: 20px;\n     column-gap: 34px;\n        }\n\n    @media screen and (min-width: 1440px) {\n    row-gap: 20px;\n    column-gap: 22px;\n    }\n`\n\n","import styled from 'styled-components';\n\nexport const MonthItemStyled = styled.div`\n  width: 32px;\n\n  @media screen and (min-width: 768px) {\n    width: 34px;\n  }\n`;\n\nexport const DayButtonFull = styled.button`\n  font-size: 14px;\n  line-height: 1.29;\n  text-align: center;\n  width: 32px;\n  height: 32px;\n  background-color: var(--primaryWhite);\n  border: 0;\n  border-radius: 20px;\n  border-color: var(--primaryWhite);\n  margin-bottom: 4px;\n  transition: background-color 200ms linear;\n\n  &:is(:hover, :focus) {\n    background-color: var(--secondaryBlue);\n    outline: inherit;\n  }\n  @media screen and (min-width: 768px) {\n    width: 34px;\n    height: 34px;\n    font-size: 16px;\n    line-height: 1.25;\n  }\n`;\n\nexport const DayButtonPart = styled.button`\n  font-size: 14px;\n  line-height: 1.29;\n  text-align: center;\n  width: 32px;\n  height: 32px;\n  background-color: var(--primaryWhite);\n  border: 1px solid var(--secondaryOrange);\n  border-radius: 20px;\n  margin-bottom: 4px;\n  transition: background-color 200ms linear;\n\n  &:is(:hover, :focus) {\n    background-color: var(--secondaryOrange);\n    outline: inherit;\n  }\n\n  @media screen and (min-width: 768px) {\n    width: 34px;\n    height: 34px;\n    font-size: 16px;\n    line-height: 1.25;\n  }\n`;\n\nexport const DayCompleted = styled.p`\n  font-size: 10px;\n  line-height: 1.6;\n  color: var(--secondaryBlue);\n  text-align: center;\n  padding: 0;\n\n  @media screen and (min-width: 768px) {\n    font-size: 13px;\n    line-height: 1.54;\n  }\n`;\n","import styled from \"styled-components\";\n\nexport const DayDetailsCont = styled.div`\n        position: absolute;\n        z-index: 100;\n        display: flex;\n        flex-direction: column;\n        gap: 16px;\n        box-shadow: 0px 4px 4px rgb(64, 123, 255, 0.3);\n        border-radius: 10px;\n\n        width: 100%;\n\n        height: 188px;\n        background-color: var(--primaryWhite);\n        padding: 24px 13px;\n\n        font-size: 16px;\n        line-height: 1.25;\n        font-weight: 400;\n\n        @media screen and (min-width: 320px) {\n                width: 280px;\n                }\n        \n        @media screen and (max-width: 767px) {\n                left: -2%;\n                transform: translateY(-106%);\n                }\n\n        @media screen and (min-width: 768px) {\n                width: 292px;\n                height: 188px;\n                padding: 24px 16px;\n                transform: translateY(-106%);\n                &.right {\n                        right: -2%;\n                }\n\n                &.left {\n                        left: -2%;\n                }\n        }\n`\n\nexport const DateText = styled.p`\n        color: var(--primaryBlue);\n        font-weight: 500;\n        font-size: 18px;\n`\n\nexport const OtherText = styled.p`\n        color: var(--primaryBlack);\n`\n\nexport const ValueSpan = styled.span`\n        vertical-align: middle;\n        color: var(--primaryBlue);\n        font-size: 18px;\n        line-height: 1.33;\n        font-weight: 500;\n`\n\nexport const SvgClose = styled.svg`\n        width: 20px;\n        height: 20px;\n        fill: var(--primaryBlue);\n`\n\nexport const CloseButton = styled.button`\n        padding: 4px;\n        background-color: inherit;\n        border: 0;\n        position: absolute;\n        right: 17px;\n        top: 23px;\n        padding: 0;\n        margin: 0;\n        text-align: center;\n        transform: rotate(45deg);\n`","import React, { useCallback, useEffect } from 'react';\nimport {\n  DayDetailsCont,\n  DateText,\n  OtherText,\n  ValueSpan,\n  SvgClose,\n  CloseButton,\n} from './DayDetails.styled.';\nimport sprite from '../../images/SVG/symbol-defs.svg';\nimport { useDispatch } from 'react-redux';\n\nconst plusIcon = `${sprite}#icon-plus-small`;\n\nexport const DayDetails = ({\n  date,\n  dailyNorma,\n  completed,\n  servings,\n  side,\n  setModal,\n  statusModal,\n}) => {\n  const day = date.split(' ')[1];\n  const dispatch = useDispatch();\n\n  const handleClickOutside = useCallback(\n    event => {\n      if (\n        !event.target.closest('.modalDetails') &&\n        !event.target.classList.contains('dateButton')\n      ) {\n        dispatch(setModal(''));\n      }\n    },\n    [dispatch, setModal]\n  );\n\n  const handleEscPress = useCallback(\n    e => {\n      if (\n        e.code.toLowerCase() === 'escape' ||\n        e.code.toLowerCase() === 'backspace'\n      )\n        dispatch(setModal(''));\n    },\n    [setModal, dispatch]\n  );\n\n  useEffect(() => {\n    if (statusModal === day) {\n      document.addEventListener('click', handleClickOutside);\n      document.addEventListener('keydown', handleEscPress);\n    }\n\n    return () => {\n      document.removeEventListener('click', handleClickOutside);\n      document.addEventListener('keydown', handleEscPress);\n    };\n  }, [day, handleClickOutside, handleEscPress, statusModal]);\n\n  return (\n    <DayDetailsCont className={`${side} modalDetails`}>\n      <CloseButton onClick={() => dispatch(setModal(''))}>\n        <SvgClose>\n          <use href={plusIcon}></use>\n        </SvgClose>\n      </CloseButton>\n      <DateText>{date}</DateText>\n      <OtherText>\n        Daily norma: <ValueSpan>{`${dailyNorma} L`}</ValueSpan>\n      </OtherText>\n      <OtherText>\n        Fulfillment of the daily norm:\n        <ValueSpan>{` ${completed}%`}</ValueSpan>\n      </OtherText>\n      <OtherText>\n        How many servings of water:\n        <ValueSpan>{` ${servings}`}</ValueSpan>\n      </OtherText>\n    </DayDetailsCont>\n  );\n};\n\n\n","import React from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\n\nimport {\n  DayButtonFull,\n  DayButtonPart,\n  DayCompleted,\n  MonthItemStyled,\n} from './MonthItem.styled';\nimport { DayDetails } from 'components/DayDetails/DayDetails';\nimport { selectNewCompleted } from '../../redux/selectors';\nimport { selectIsLoading } from '../../redux/selectors';\n\nexport const MonthItem = ({\n  date,\n  completed,\n  dailyNorma,\n  servings,\n  modal,\n  setModal,\n  isCurrentMonth,\n}) => {\n  const isLoading = useSelector(selectIsLoading);\n\n  const day = date.split(' ')[1];\n  const isToday = day === new Date().getDate().toString() && isCurrentMonth;\n  const newCompleted = useSelector(selectNewCompleted);\n  const newCompletedFormat = newCompleted >= 100 ? 100 : newCompleted;\n  const dispatch = useDispatch();\n  const Button = completed >= 100 ? DayButtonFull : DayButtonPart;\n  const completedFormat = completed >= 100 ? 100 : completed;\n  const leftOrRigth = isRight(day);\n  return (\n    <MonthItemStyled>\n      {modal === day && (\n        <DayDetails\n          date={date}\n          dailyNorma={dailyNorma}\n          completed={isToday ? newCompleted : completedFormat}\n          servings={servings}\n          side={leftOrRigth}\n          setModal={setModal}\n          statusModal={modal}\n        />\n      )}\n      <Button\n        disabled={isLoading}\n        onClick={() => dispatch(setModal(day))}\n        className=\"dateButton\"\n      >\n        {day}\n      </Button>\n      <DayCompleted>{`${\n        isToday ? newCompletedFormat : completedFormat\n      }%`}</DayCompleted>\n    </MonthItemStyled>\n  );\n};\n\nconst isRight = day => {\n  const rightSide = ['6', '7', '8', '9', '0'];\n\n  for (let sub of rightSide) {\n    if (day.includes(sub)) {\n      return 'right';\n    }\n  }\n  return 'left';\n};\n","import React, { useEffect, useState } from 'react';\n\nimport {\n  MonthTitle,\n  DatePicker,\n  SvgLeft,\n  SvgRight,\n  LeftArrowButton,\n  RigthArrowButton,\n  MonthHeader,\n  MonthListStyled,\n} from './MonthList.styled';\nimport sprite from '../../images/SVG/symbol-defs.svg';\nimport { MonthItem } from '../MonthItem/MonthItem';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { getMonthWaterOperation } from '../../redux/water/waterOperations';\nimport { selectManthList, selectModalDetails } from '../../redux/selectors';\nimport { setModalDetails } from '../../redux/modal/modalSlice';\nimport { selectDailyNorma } from '../../redux/selectors';\n\nconst iconArrow = `${sprite}#icon-chevron-double-up`;\n\nexport const MonthList = () => {\n  const [date, setDate] = useState(new Date());\n  const dispatch = useDispatch();\n  const dailyNorma = useSelector(selectDailyNorma);\n\n  const modalDetails = useSelector(selectModalDetails);\n\n  useEffect(() => {\n    dispatch(getMonthWaterOperation(date));\n  }, [date, dispatch]);\n\n  const firstArray = useSelector(selectManthList);\n\n  const testArray = firstArray.map(item => {\n    if (!item.date) {\n      const newItem = { ...item };\n      newItem.completed = 0;\n      newItem.dailyNorma = dailyNorma / 1000;\n      newItem.date = `${months[date.getMonth()]}, ${item._id}`;\n      return newItem;\n    }\n    return item;\n  });\n\n  const isCurrentMonth =\n    date.getMonth() === new Date().getMonth() &&\n    date.getFullYear() === new Date().getFullYear();\n\n  return (\n    <div>\n      <MonthHeader>\n        <MonthTitle>Month</MonthTitle>\n        <DatePicker>\n          <LeftArrowButton onClick={() => downMonth(date, setDate)}>\n            <SvgLeft>\n              <use href={iconArrow}></use>\n            </SvgLeft>\n          </LeftArrowButton>\n          <p>{`${months[date.getMonth()]}, ${date.getFullYear()}`}</p>\n          <RigthArrowButton\n            onClick={() => upMonth(date, setDate)}\n            disabled={isCurrentMonth}\n          >\n            <SvgRight>\n              <use href={iconArrow}></use>\n            </SvgRight>\n          </RigthArrowButton>\n        </DatePicker>\n      </MonthHeader>\n      <MonthListStyled>\n        {testArray.map(item => (\n          <MonthItem\n            key={item._id}\n            date={item.date}\n            completed={item.completed}\n            servings={item.servings}\n            dailyNorma={item.dailyNorma}\n            modal={modalDetails}\n            setModal={setModalDetails}\n            isCurrentMonth={isCurrentMonth}\n          />\n        ))}\n      </MonthListStyled>\n    </div>\n  );\n};\n\nconst upMonth = (date, setDate) => {\n  const newDate = new Date(date.getTime());\n  newDate.setMonth(newDate.getMonth() + 1);\n  setDate(newDate);\n};\n\nconst downMonth = (date, setDate) => {\n  const newDate = new Date(date.getTime());\n  newDate.setMonth(newDate.getMonth() - 1);\n  setDate(newDate);\n};\n\nconst months = [\n  'January',\n  'February',\n  'March',\n  'April',\n  'May',\n  'June',\n  'July',\n  'August',\n  'September',\n  'October',\n  'November',\n  'December',\n];\n","import React from 'react';\nimport { TaDLayout } from './TodayAndMonthLayout.styled';\nimport { TodayList } from 'components/TodayList/TodayList';\nimport { MonthList } from 'components/MonthList/MonthList';\n\nexport const TodayAndMonthLayout = () => {\n  return (\n    <TaDLayout>\n      <TodayList />\n      <MonthList />\n    </TaDLayout>\n  );\n};\n","import { useState } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { toast } from 'react-toastify';\n\nimport sprite from '../../images/SVG/symbol-defs.svg';\nimport {\n  AmountDiv,\n  AmountWrap,\n  BtnSvg,\n  Button,\n  CounterDiv,\n  CounterWrap,\n  Input,\n  StyledDatePicker,\n  StyledModal,\n  Svg,\n  TextInput,\n  TextInputTime,\n  Title,\n  TitleInput,\n  WrapHeader,\n  WrapSvg,\n} from './TodayListModal.styled';\nimport { addWaterOperation } from '../../redux/water/waterOperations';\nimport { disabledTime } from 'helpers/disabledTime';\nimport { selectIsLoading } from '../../redux/selectors';\n\nexport const TodayListModal = ({ modalIsOpen, closeModal }) => {\n  const isLoading = useSelector(selectIsLoading);\n  const [waterVolume, setWaterVolume] = useState(50);\n  const [startDate, setStartDate] = useState(new Date());\n  const dispatch = useDispatch();\n\n  const hours = startDate.getHours().toString().padStart(2, '0');\n  const minutes = startDate.getMinutes().toString().padStart(2, '0');\n\n  const increment = () => {\n    setWaterVolume(state => state + 50);\n  };\n\n  const decrement = () => {\n    setWaterVolume(state => Math.max(state - 50));\n  };\n\n  const handleChange = async evt => {\n    if (evt.target.value.length > 4) {\n      return;\n    }\n    const result = Math.floor(evt.target.value);\n    if (result || result === 0) {\n      setWaterVolume(result);\n    }\n  };\n\n  const onChange = timeValue => {\n    setStartDate(timeValue.$d);\n  };\n\n  const handleCloseModal = () => {\n    closeModal();\n    setWaterVolume(50);\n    setStartDate(new Date());\n  };\n\n  const handleSubmit = async evt => {\n    evt.preventDefault();\n    if (waterVolume === 0) {\n      return toast.error('You cannot send 0 ml');\n    }\n    if (waterVolume < 1 || waterVolume > 1500) {\n      return toast.error('You can enter value from 1 to 1500');\n    }\n    dispatch(addWaterOperation({ waterVolume, date: startDate }));\n    handleCloseModal();\n  };\n\n  return (\n    <StyledModal\n      contentLabel=\"Modal\"\n      isOpen={modalIsOpen}\n      onRequestClose={handleCloseModal}\n      style={{\n        overlay: {\n          backgroundColor: 'rgba(0, 0, 0, 0.8)',\n        },\n      }}\n    >\n      <WrapHeader>\n        <Title>Add water</Title>\n        <BtnSvg className=\"cross-btn\" type=\"button\" onClick={handleCloseModal}>\n          <svg className=\"cross-svg\">\n            <use xlinkHref={`${sprite}#icon-plus-small`} />\n          </svg>\n        </BtnSvg>\n      </WrapHeader>\n      <form onSubmit={handleSubmit}>\n        <TitleInput>Choose a value:</TitleInput>\n        <TextInput>Amount of water:</TextInput>\n        <CounterWrap>\n          <WrapSvg\n            type=\"button\"\n            onClick={decrement}\n            disabled={waterVolume <= 49 ? true : false}\n          >\n            <Svg width=\"24\" height=\"24\">\n              <use xlinkHref={`${sprite}#icon-minus-small`} />\n            </Svg>\n          </WrapSvg>\n          <CounterDiv>{waterVolume} ml</CounterDiv>\n          <WrapSvg\n            type=\"button\"\n            onClick={increment}\n            disabled={waterVolume >= 1451 ? true : false}\n          >\n            <Svg width=\"24\" height=\"24\">\n              <use xlinkHref={`${sprite}#icon-plus-small`} />\n            </Svg>\n          </WrapSvg>\n        </CounterWrap>\n\n        <label>\n          <TextInputTime>Recording time:</TextInputTime>\n          <StyledDatePicker\n            placeholder={`${hours}:${minutes}`}\n            format=\"HH:mm\"\n            onChange={onChange}\n            disabledTime={disabledTime}\n          />\n        </label>\n        <label>\n          <TitleInput>Enter the value of the water used:</TitleInput>\n          <Input\n            name=\"amount\"\n            type=\"text\"\n            value={waterVolume}\n            onChange={handleChange}\n          />\n        </label>\n        <AmountWrap>\n          <AmountDiv>{waterVolume} ml</AmountDiv>\n          <Button type=\"submit\" disabled={isLoading}>\n            Save\n          </Button>\n        </AmountWrap>\n      </form>\n    </StyledModal>\n  );\n};\n","import React, { useEffect } from 'react';\nimport iconSprite from '../../../images/SVG/symbol-defs.svg';\nimport {\n  RangeAndAddWater,\n  RangeDiv,\n  RangeTitle,\n  StyledRangeInput,\n  PercentageDiv,\n  PercentageOfRange,\n  BoldPercentageOfRange,\n  ButtonAddWater,\n  SvgButton,\n} from '../../../pages/HomePage/HomePage.styled';\nimport { TodayListModal } from 'components/TodayListModal/TodayListModal';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { selectModalAdd, selectNewCompleted } from '../../../redux/selectors';\nimport { openModalAdd, closeModalAdd } from '../../../redux/modal/modalSlice';\n\nexport const WaterRatioPanel = () => {\n  const dispatch = useDispatch();\n  const modalIsOpen = useSelector(selectModalAdd);\n  const sliderValue = useSelector(selectNewCompleted);\n\n  useEffect(() => {\n        const body = document.body;\n        if (modalIsOpen) {\n            body.style.overflow = 'hidden';\n        } else {\n            body.style.overflow = 'auto';\n        }\n        return () => {\n            body.style.overflow = 'auto';\n        };\n    }, [modalIsOpen]);\n\n  const progress = (sliderValue / 100) * 100;\n\n  const sliderStyle = {\n    background: `linear-gradient(to right, #9EBBFF ${progress}%, #D7E3FF ${progress}%)`,\n  };\n\n  const openModal = () => {\n    dispatch(openModalAdd());\n  };\n\n  const closeModal = () => {\n    dispatch(closeModalAdd());\n  };\n\n  return (\n    <RangeAndAddWater>\n      <RangeDiv>\n        <RangeTitle>Today</RangeTitle>\n        <StyledRangeInput\n          type=\"range\"\n          min=\"0\"\n          max=\"100\"\n          value={sliderValue}\n          style={sliderStyle}\n          readOnly={true}\n        ></StyledRangeInput>\n        <PercentageDiv>\n          <PercentageOfRange>0%</PercentageOfRange>\n          <PercentageOfRange>\n            <BoldPercentageOfRange>50%</BoldPercentageOfRange>\n          </PercentageOfRange>\n          <PercentageOfRange>100%</PercentageOfRange>\n        </PercentageDiv>\n      </RangeDiv>\n      <ButtonAddWater onClick={openModal}>\n        <SvgButton>\n          <use href={iconSprite + '#icon-plus-circle'} />\n        </SvgButton>\n        Add Water\n      </ButtonAddWater>\n      <TodayListModal modalIsOpen={modalIsOpen} closeModal={closeModal} />\n    </RangeAndAddWater>\n  );\n};\n","import { DailyNorma } from 'components/Homepage/DailyNorma';\nimport { ImageOfBottle } from 'components/Homepage/ImageOfBottle/ImageOfBottle';\nimport { TodayAndMonthLayout } from 'components/TodayAndMonthLayout/TodayAndMonthLayout';\nimport { WaterRatioPanel } from 'components/Homepage/WaterRatioPanel/WaterRatioPanel';\nimport { LeftSideDiv, AllSidesDiv, StyledBackground } from './HomePage.styled';\n\nconst HomePage = () => {\n  return (\n    <StyledBackground className='static-background'>\n      <div className=\"container\">\n        <AllSidesDiv>\n          <LeftSideDiv>\n            <DailyNorma />\n            <ImageOfBottle />\n            <WaterRatioPanel />\n          </LeftSideDiv>\n          <TodayAndMonthLayout />\n        </AllSidesDiv>\n      </div>\n    </StyledBackground>\n  );\n};\nexport default HomePage;\n"],"names":["StyledReactModal","styled","ReactModal","_templateObject","_taggedTemplateLiteral","WrapHeader","_templateObject2","StyledRadioGroup","_templateObject3","StyledRadioLabel","_templateObject4","StyledRadioInput","_templateObject5","StyledRadioCircle","_templateObject6","CircleColor","_templateObject7","props","checked","StyledRadioText","_templateObject8","TitleText","_templateObject9","WrapFormulaText","_templateObject10","FormulaText","_templateObject11","WrapFormula","_templateObject12","AboutFormula","_templateObject13","AboutFormulaColor","_templateObject14","Text","_templateObject15","TextInfo","_templateObject16","Input","_templateObject17","_ref","$hasError","AmountText","_templateObject18","AmountTextInfo","_templateObject19","AmountNumberInfo","_templateObject20","Button","_templateObject21","MessageError","_templateObject22","DailyNormaModalSchema","Yup","shape","gender","required","weight","positive","min","time","typeError","max","nullable","dailyNorma","DailyNormaModal","modalIsOpen","closeModal","isLoading","useSelector","selectIsLoading","_useState","useState","_useState2","_slicedToArray","formula","setFormula","_useState3","_useState4","amount","setAmount","dispatch","useDispatch","token","state","auth","formik","useFormik","initialValues","validationSchema","onSubmit","_onSubmit","_asyncToGenerator","_regeneratorRuntime","_callee","values","waterNorma","_context","prev","next","console","log","abrupt","toast","updateWaterThunk","handleCloseModal","t0","stop","_x","apply","arguments","useEffect","weightNumber","Math","floor","timeNumber","isNaN","result","toFixed","resetForm","handleGenderChange","evt","setFieldValue","target","value","handleInputChange","handleChange","_jsxs","contentLabel","isOpen","onRequestClose","style","overlay","backgroundColor","children","_jsx","className","type","onClick","xlinkHref","concat","sprite","handleSubmit","role","name","onChange","touched","errors","placeholder","disabled","Wrap","TextWater","BtnWrap","DailyNorma","user","setIsOpen","body","document","overflow","water","StyledBackground","backgroundImgTab","backgroundImgDesc","ImgTumb","StyledRangeInput","RangeAndAddWater","RangeDiv","RangeTitle","PercentageOfRange","BoldPercentageOfRange","PercentageDiv","ButtonAddWater","SvgButton","LeftSideDiv","AllSidesDiv","ImageOfBottle","src","bottleMobile","srcSet","bottleTablet","bottleDesktop","trim","sizes","alt","TaDLayout","TodayListContainer","TodayTitle","AddLink","SvgPlus","WaterList","WaterItem","CupIcon","WaterText","TimeText","SvgPen","SvgTrash","ConfigIcons","ButtonPen","ButtonTrash","StyledModal","Title","BtnSvg","Svg","WrapSvg","CounterDiv","CounterWrap","TitleInput","TextInput","TextInputTime","AmountDiv","AmountWrap","StyledDatePicker","TimePicker","StyledContainer","StyledForm","disabledTime","now","currentHour","hour","disabledHours","Array","from","length","_","index","filter","disabledMinutes","selectedHour","minute","glassIcon","EditModal","date","id","waterMl","waterVolume","setWaterVolume","Date","startDate","setStartDate","hours","getHours","toString","padStart","minutes","getMinutes","_ref2","_ref3","_callee2","_context2","preventDefault","editWaterOperation","_x2","href","width","height","selected","format","timeValue","$d","editIcon","delIcon","TodayItem","isEditModalOpen","selectModalEdit","isDeleteModalOpen","selectModalDelete","openModal","modalType","openModalEdit","openModalDelete","closeModalEdit","closeModalDelete","handleDelete","deleteWaterOperation","DeleteModal","titleText","SecondTitleModal","ButtonsWrapper","ButtonCancel","ButtonRed","plusIcon","TodayList","getWaterOperation","todayList","selectTodayList","map","item","_id","openModalAdd","MonthTitle","DatePicker","SvgLeft","SvgRight","LeftArrowButton","RigthArrowButton","MonthHeader","MonthListStyled","MonthItemStyled","DayButtonFull","DayButtonPart","DayCompleted","DayDetailsCont","DateText","OtherText","ValueSpan","SvgClose","CloseButton","DayDetails","completed","servings","side","setModal","statusModal","day","split","handleClickOutside","useCallback","event","closest","classList","contains","handleEscPress","e","code","toLowerCase","addEventListener","removeEventListener","MonthItem","modal","isCurrentMonth","isToday","getDate","newCompleted","selectNewCompleted","newCompletedFormat","completedFormat","leftOrRigth","isRight","_i","_rightSide","sub","includes","iconArrow","MonthList","setDate","selectDailyNorma","modalDetails","selectModalDetails","getMonthWaterOperation","testArray","selectManthList","newItem","_objectSpread","months","getMonth","getFullYear","downMonth","upMonth","setModalDetails","newDate","getTime","setMonth","TodayAndMonthLayout","TodayListModal","addWaterOperation","WaterRatioPanel","selectModalAdd","sliderValue","progress","sliderStyle","background","readOnly","iconSprite","closeModalAdd"],"sourceRoot":""}